import { StatusBar } from 'expo-status-bar'; // Статусбар(меню с зарядом, подключением и т.д.)
import React, { useState } from 'react'; // React(нужен для работы с данными)
import { StyleSheet, Text, View, Image, FlatList, TouchableHighlight } from 'react-native'; // Объекты для страницы(стили, текст, блок, картинка, список)
import { SafeAreaView } from 'react-native-safe-area-context'; // Безопасная зона экрана(То поле, которое всегда видно)
import AsyncStorage from '@react-native-async-storage/async-storage'; // AsyncStorage позволяет хранить данные на устройстве



// Массивы, в которых храниться переписка
let first = ['Если вы людям нравитесь, то вы хороши. Если они ненавидят вас, то вы — лучший!',
  'Жозе Моуринью']
let overVoice = [ ]
first.unshift('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n')
let chat = [first]

// Массив со всеми вариантами концовок
let end = ['Полицейская машина подоспела весьма быстро, полицейские опросили Соню, назвали её очень храброй девушкой. Двоих мужчин задержали, но даже после долгих и самых напряжённых допросов, они не сообщили имени своего заказчика, следственное дело зашло в тупик. Что же до нашей героини, то её отвезли домой к её матери, где её крайне быстро и вкусно накормили и уложили спать, а с утра всё что с ней было, показалось ей лишь дурным сном.',
'Внезапно Соня услышала громкий хлопок выстрела почувствовала острую боль в груди. Пуля калибра 7 мм вонзилась ей прямо в грудь, пробила Соню насквозь и вылетела с другой стороны, в области спины.',
'Не успела Соня и развернуться, как вдруг почувствовала невыносимую боль в груди и услышала оглушительный выстрел. Пуля калибра 7 миллиметров впилась ей прямо в спину, пронзила тело Сони насквозь и вылетела с другой стороны.',
'Не успела Соня сказать и слова, как пуля 7 калибра пробила тело нашей героини насквозь и вышло с обратной стороны.',
'Но какие шансы были у хрупкой девочки против крупного мужчины, тем более вооружённого пистолетом, Соня услышала лишь тихий звук выстрела пули, вылетевшей из  пистолета с накрученным на него аллюминиевым глушителем',
'Соня бежала быстро, она никогда прежде не бегала быстрее, но, к сожалению, пуля с лёгкостью догнала нашу героиню и, пробив спину, угодила ей прямо в сердце, и, пробив правый желудочек, вылетело наружу.',
'Соня услышала оглушительный выстрел и почувствовала невыносимую боль в груди. Пуля калибра 7 мм вонзилась ей прямо в грудь, пробила насквозь и вылетела сзади.',
'Не успела Соня и понять, что же всё таки было в руках у того мужчины, как пуля 9 калибра былетела из пистолета с накрученным на него предохранителем ит пробило Сонину тоненькую шею.'
]
let flatList = [ ] // Массив необходимый для прокрутки вниз

// Переменные, которые помогают стилизовать сообщения
let textAlign = 'left' // Наклон текста
let alignMessage = 'flex-start' // В какой стороне отобразиться сообщение
let buttonBorder = 0 // Ширина контура кнопок
let textColor = '#fff' // Цвет текста сообщения
let buttonColor = '#057a55' // Цвет кнопок
let padding = [20,35] // Отступы внутри сообщения(слева и справа)
let border = [0,9] // Скругленность углов у верхней и нижней кнопки
let counter1 = 0 // Счетчик для постепенной стилизации сообщений

let flag = false // Был ли начат диалог
let time = 0 // Время ожидания перед сбросом
let phrases = 1 // Количество фраз(1 фраза - несколько подряд идущих сообщений от одного персонажа)
let del = 1000

// Функция задержки
const delay = (delayInms) => {
  return new Promise(resolve => setTimeout(resolve, delayInms));
}

AsyncStorage.setItem('resetStory','0') // Сбрасываем значение перезапуска игры




// Основная функция приложения
export default function App ({ navigation }) {

  const [messages,setMessages] = useState(chat) // Содержимое чата
  const [buttons,setButtons] = useState([]) // Кнопки
  const [prevBut, setPrevBut] = useState([]) 

  if ( !flag ) {

    // Запускаем сюжет
    flag = true
    start()

  }


  // Функция перехода на экран "Меню"
  const openMenu = () => {
    navigation.navigate('menu')
  }


  // Функции прокручивания в конец чата
  const toEnd = () => {
    flatList.scrollToEnd({animated: true})
  }
  const toLast = () => {
    flatList.scrollToIndex({index: messages.length-1,animated: true})
  }


  // Функция добавления новой открытой концовки
  const addEnd = (name) => {
    AsyncStorage.setItem(name, '1');
    console.log(name)
  }


  // Функция отправки списка сообщений от одного из 
  async function sendArray ( arr, err = false ) {

    await delay(del) // Задержка перед отправкой

    // Отправляем первое сообщение
    messages.push([ arr[0] ])
    updateColor() // Обновляем расцветку в чате

    if ( !err ) {

      updateAlign() // Обновляем распределение в чате в чате

    }

    setButtons([]) // Сбрасываем кнопки
    toEnd() // Скролим чат вниз

    time = (arr.length*del+del) // Обновляем время перезагрузки сюжета

    // Делаем отступ сверху меньше
    let newArr = messages 
    newArr[0][0] = newArr[0][0].substring(0,newArr[0][0].length-1)
    setMessages(newArr)
    chat[0][0] = newArr[0][0]

    // Отправляем остальные сообщения
    for( let i = 1; i < arr.length; i++ ){

      updateColor() // Обновляем расцветку в чате
      await delay(del) // Задержка перед отправкой
      flatList = [] 
      messages[phrases].push( [ arr[i] ] ) // Отправляем сообщение
      setButtons([]) // Сбрасываем кнопки
      toLast() // Скролим чат вниз

      // Делаем отступ сверху меньше
      let newArr = messages
      newArr[0][0] = newArr[0][0].substring( 0, newArr[0][0].length-1 )
      setMessages( newArr )
      chat[0][0] = newArr[0][0]

      time -= del // Обновляем время перезагрузки сюжета

    }
    phrases++ // Засчитываем добавленную фразу

  }
  // Функция начала сюжета
  async function start () {

    await delay(30) // Задержка для прогрузки чата

    toLast() // Скролим вниз
    
    // Отправляем первые сообщения
    await sendArray([ 'Привет, Арсюш, это Соня!',
    'Я тут мобилу сломала, снова,  вот с новой тебе пишу. ', 'В общем и целом, я выиграла тур-поездку в лес от того отеля, в котором, ещё вчера, мы отдыхали вместе, и выиграть путевки, к слову, тоже вместе могли, если бы кое-кто, по делам своим, как и всегда, не улетел.',
    'В общем, я уже в машине еду, водитель улыбчивый, но странный. Закрыл перегородку, всё лишь бы меня не видеть' ])

    // Открываем кнопки
    await showButtons(['Расскажи где ты сейчас',
    'Девушка, вы ошиблись номером'])

  }

  // Хук для обновления данных о чате
  React.useEffect(() => {

    const focusHandler = navigation.addListener('focus', () => {

      // Проверяем необходимость сброса чата при переходе на страницу
      AsyncStorage.getItem("resetStory").then(async value => {

        if ( value == '1' ) { 
          
          // Сбрасываем чат

          await delay( time ) // Задержка перед сбросом
          await plot( 'Начать новую игру' ) // Сброс

        }

        AsyncStorage.setItem('resetStory','0') // Сбрасываем значение перезапуска игры

      })

    });

    return focusHandler;

  }, [navigation]);


  // Функция открытия списка кнопок для продолжения сюжета
  async function showButtons ( keys ) {

    let prev = keys
    buttonBorder = 1
    buttonColor = '#057a55'
    await setButtons(keys)
    toLast()
    setPrevBut(prev)

  }


  // Функция открытия списка кнопок для завершения сюжета
  async function showFinalButtons ( overVoice, keys, err = false ) {

    await sendArray(overVoice)
    buttonBorder = 1
    
    if(!err){
      updateAlign()
    }
    
    finished = true
    buttonColor = '#e46c0a'
    
    await setButtons(keys)

    toLast()

  }


  // Функция распределения собщений по чату
  const updateAlign = () => {

    if ( alignMessage == 'flex-end' ) { // Распределяем сообщения собеседника №1

      alignMessage = 'flex-start'
      textAlign = 'left'
      padding = [20,35]
      border = [0,9]

    } else if ( alignMessage == 'flex-start' )  { // Распределяем сообщения собеседника №2

      alignMessage = 'flex-end'
      textAlign = 'right'
      padding = [35,20]
      border = [9,0]

    }

    return alignMessage

  }
  // Функция обновления цвета собщений по чату
  const updateColor = (e) => {

    if ( messages[0].indexOf(e) != -1 || end.indexOf(e) != -1 || overVoice.indexOf(e) != -1 ) { // Стилизуем закадровый голос

      textColor = '#fff'
      counter1++
      return '#000'

    } else {

      if ( alignMessage == 'flex-start' ) { // Стилизуем сообщения собеседника №1

        textColor = '#000'
        return '#e7e6ec'

      } else { // Стилизуем сообщения собеседника №2

        textColor = '#fff'
        return '#057a55'

      }

    }
  }
  // Функция для реализации сюжета
  async function plot(e){

    messages.push([e]) // Добавляем в чат сообщение от игрока

    // Скрываем кнопки
    setButtons([])
    buttonBorder = 0
    const stopList = ['Девушка, я от вас сообщения вообще не в мессенджере получаю', 
    'Это отдельное приложение, и оно было скачано мной',
    'Девушка, я понятия не имею, как звали вашего бывшего',
    'Это очень странно. Опиши место куда в которое ты попала',
    'Девушка, я от своего лица пишу, но мне все ваши сообщения даже не в мессенджер приходят',
    'Девушка, все ваши сообщения мне даже не в мессенджер приходят']
    phrases++ // Засчитываем фразу
    updateAlign() // Обновляем распределение сообщений в чате в чате


    // Сюжетная линия

    if ( e == 'Расскажи где ты сейчас' ) {
      // Отправляем сообщения персонажа
      await sendArray(
        ['Сейчас мы на озере остановились',
        'Здесь наша первая остановка по идеи',
        'Блин, жаль тебя рядом нет',
        'Мне рекомендуют к воде пойти прогуляться', 
        'Типа там вид получше будет',
        'Я иду']
      )
      // Открываем кнопки
      await showButtons(
        ['Расскажи о себе немного',
        'Хорошо, иди конечно']
      )
    }
    if ( e == 'Расскажи о себе немного' ) {

      // Отправляем сообщения персонажа
      await sendArray(
        ['Рассказать?',
        'Девушка, я вас не узнаю, кто вы такая и что вы сделали с моей подругой?',
        'Так',
        'Какого чёрта вообще',
        'Машина только что уехала' ,
        'Чего блин?']
      )
      // Открываем кнопки
      await showButtons(
        ['Девушка, я понимаю, что у вас похоже проблемы, но мы с вами не знакомы',
        'Постарайся догнать авто','Какая ещё машина? Кто вы?']
      )
    }
    if ( e == 'Какая ещё машина? Кто вы?' ) {
      // Отправляем сообщения персонажа
      await sendArray(
        ['Подруга, мне сейчас твоя помощь, реально нужна, выручай, пожалуйста.']
      )
      // Открываем кнопки
      await showButtons(
        ['Пожалуйста, не паникуй только',
        'Девушка, да кто вы и зачем вы мне пишете?']
      )
    }
    if ( e == 'Хорошо, иди конечно' ) {

      // Отправляем сообщения персонажа
      await sendArray(
        ['Стоп что?',
        'Машина уезжает',
        'Водитель уехал, он меня кинул',
        'Кинул меня, прям, как мой бывший',
        'Не знаю что делать Ася спасай']
      )

      // Открываем кнопки
      await showButtons(
        ['Девушка, произошла ошибка, я вас не знаю',
        'Да где ты вообще находишься?']
      )
    }
    if ( e == 'Девушка, да кто вы и зачем вы мне пишете?' ||e=='Девушка, кто вы такая и почему вы мне пишете?'||e=='Никакая я не Арсения, и вообще мы с вами не знакомы') {

      // Отправляем сообщения персонажа
      await sendArray(
        [
          'А это уже не в какие ворота, заканчивай своё вот это.',
          'Ты понимаешь, что мне сейчас реально помощь нужна, а не вот это вот всё.',
          'А вообще подожди, как звали моего бывшего?'
        ]
      )

      // Открываем кнопки
      await showButtons(
        ['Девушка, какой бывший? Какая помощь? Кто вы вообще?' ]
      )
    } 

    if ( e == 'Девушка, произошла ошибка, я вас не знаю'||e =='Девушка, я понимаю, что у вас похоже проблемы, но мы с вами не знакомы' ) {

      // Отправляем сообщения персонажа
      await sendArray(
        [ 'Ась,  это реально не смешно',
          'Я тебе в лс пишу, но ты в сообщениях своих на себя вообще не похожа совсем, и мне сейчас, как никогда, нужна помощь подруги',
          'А я её не получаю',
          'Никакой',
          'Вообще от тебя последнее время один холод, мне помощь нужна, а ты мне не даёшь её',
          'Ась, с тобой всё вообще в порядке?',
          'Тебя по сообщениям твоим не узнать вообще'
        ]
      )
      // Открываем кнопки
      await showButtons(
        ['Всё в порядке',
        'Нет, я понятия не имею кто вы такая']
      )
    }
  
    if ( e == 'Девушка, вы ошиблись номером' ) {

      // Отправляем сообщения персонажа
      await sendArray(
        ['Уважаемая Арсения, твои шутки с каждым разом всё хуже и хуже',
         'Уж не знаю, насколько тебе интересно, но мы остановились на берегу озера, и я вышла из машины осмотреться.',
        'Тут очень красиво, уже жалею, что ты сейчас не рядом',
          'Так стоп стоп стоп',
          'Пока я отходила к озеру, тут от меня машина уехала',
         'И как мне теперь? И куда мне теперь?']
      )
      // Открываем кнопки
      await showButtons(
        ['Девушка, кто вы такая и почему вы мне пишете?',
        'Может быть ты попробуешь догнать машину, пока она еще далеко уезать не успела?']
      )
    }

    if ( e == 'Постарайся догнать авто'||e=='Может быть ты попробуешь догнать машину, пока она еще далеко уезать не успела?') {

      // Отправляем сообщения персонажа
      await sendArray(
        ['Догнать?',
        'Серьёзно?', 'Так вот уехала машина уже','Я вообще не поняла что произошло сейчаc, но подсказывает мне моя чуйка, ни к чему хорошему это явно не приведёт ','Арсения, ты же меня не кинула, ты же тут?']
      )

      // Открываем кнопки
      await showButtons(
        ['Пожалуйста, только не паникуйте',
       'Никакая я не Арсения, и вообще мы с вами не знакомы']
      )
    }
 
    if ( e == 'Да где ты вообще находишься?' ) {
      // Отправляем сообщения персонажа
      await sendArray(
        ['Я тебе рассказала уже',
        'Ты меня не слушаешь, я не знаю',
        'Мне сейчас так помощь нужна, хотя бы моральная',
        'От подруги своей',
        'А я её не получаю совсем, не получаю ',
        'Ты, вообще, сама на себя последнее время не похожа.',
        'Ась, такой вопросик к тебе, почему я с бывшим рассталась?',
        'Просто сомнения некоторые есть']
      )
      // Открываем кнопки
      await showButtons(
        ['И почему же?']
      )
    }
    if ( e == 'Всё в порядке' ) {
      // Отправляем сообщения персонажа
      await sendArray(
        [
    'А я вот не уверена, давай вопросик простой: С какими парнями я не встречаюсь?']
      )
      // Открываем кнопки
      await showButtons(
        ['С какими же?', 'Девушка, я не ваша подруга, я не знаю'], true
      )
    }
      if ( e == 'Пожалуйста, только не паникуйте' ) {
      // Отправляем сообщения персонажа
      await sendArray(
        [
          'Пожалуйста?',
          'Где вообще моя подруга, и что ты с ней сделала?',
          'Ась, ты общаешься со мной максимально странно сейчас',
          'Я, если честно, хочу убедиться, что говорю со своей подругой вообще. Как звали моего бывшего?']
      )

      // Открываем кнопки
      await showButtons(
        ['Девушка, я понятия не имею, как звали вашего бывшего'],
        true
      )
    }
    if ( e == 'И почему же?' ) {

      // Отправляем сообщения персонажа
      await sendArray(
        [
          'Подарков мало дарил, а теперь рассказывай кто ты и почему пишешь с телефона моей подруги?'
        ]
      )
      // Открываем кнопки
      await showButtons(
        ['Девушка, мне сообщения вообще не в мессенджер приходят']
      )
    }
    if ( e == 'Нет, я понятия не имею кто вы такая' ) {

      // Отправляем сообщения персонажа
      await sendArray(
        ['Так это не шутка?',
        'И почему же ты мне от её лица пишешь?']
      )
      // Открываем кнопки
      await showButtons(
        ['Девушка, я от своего лица пишу, но мне все ваши сообщения даже не в мессенджер приходят'], true
      )
    }
    if ( e == 'С какими же?' ) {
      // Отправляем сообщения персонажа
      await sendArray(
        ['С необеспеченными, Ася ответ знает так-то. И почему же вы интересно мне с её номера пишете?']
      )
      // Открываем кнопки
      await showButtons(
        ['Девушка, все ваши сообщения мне даже не в мессенджер приходят'],true
      )
    }

    if ( e == 'Девушка, какой бывший? Какая помощь? Кто вы вообще?' || e =='Девушка, я не ваша подруга, я не знаю'|| e=='Девушка, я понятия не имею, как звали вашего бывшего') {
      // Отправляем сообщения персонажа
      await sendArray(
        ['Так ну и кто же вы такой?',
         'И почему вы мне с номера моей подруги пишете?']
      )
      // Открываем кнопки
      await showButtons(
        ['Девушка, я от вас сообщения вообще не в мессенджере получаю'], true
      )
    }
    if ( e == 'Девушка, мне сообщения вообще не в мессенджер приходят'|| e == 'Девушка, я от вас сообщения вообще не в мессенджере получаю'||e=='Девушка, все ваши сообщения мне даже не в мессенджер приходят'|| e=='Девушка, я от своего лица пишу, но мне все ваши сообщения даже не в мессенджер приходят') {
      // Отправляем сообщения персонажа
      await sendArray(
        ['И куда же они вам приходят?']
      )
      // Открываем кнопки
      await showButtons(
        ['Это отдельное приложение, и оно было скачано мной'], true
      )
    }
    if ( e == 'Это отдельное приложение, и оно было скачано мной') {
      await sendArray(
        ['В таком случае, у меня возникла серьёзная проблема.',
        'Мой телефон сильно глючит, и работает только этот мессенджер, а так же все остальные контакты, кроме этого, показываются заблокированными,этот же отображается вообще, как номер моей подруги, и ко всему наша переписка периодически лагает, я, правда, не знаю, что с моим телефоном.',
        'Но мне действительно сейчас нужна серьезная помощь и поддержка.' ,
        'И похоже, что мне кроме вас, больше не к кому обратиться']
      )
      await showButtons(
        ['Это очень странно. Опиши место куда в которое ты попала'], true
      )
    }

    //addEnd('1')

  //}
  if ( e == 'Это очень странно. Опиши место куда в которое ты попала' ) {
    // Отправляем сообщения персонажа
    await sendArray(
      ['Я прямо сейчас  на берегу озера стою,  позади трава высокая, а за ней и деревья высокие.',
     'Впереди озеро, направо по мелководью явно не пройти, там деревья и ветки всякие, вообще берег озера неухоженным выглядит, налево по мелководью пройти в теории можно. На другом берегу озера  деревья сплошные, ничего кроме них не видно больше.',
     'Также дорога есть по которой меня привезли сюда, по ней и вернуться можно, но идти довольно далеко',
     'Пожалуйста, будьте на связи, этот телефон почему то только Арсении писать даёт,  то есть  вам, я не знаю что с ним.']
    )
    // Открываем кнопки
    await showButtons(
      ['Понял вас, оставайтесь на месте и и ждите помощь.','Девушка, мне кажется, максимально логично будет вернуться по дороге, по которой вас привезли сюда.','Девушка,  вам срочно необходимо обойти это озеро']
    )
}
  if ( e == 'Девушка, мне кажется, максимально логично будет вернуться по дороге, по которой вас привезли сюда.' ) {

    // Отправляем сообщения персонажа
    await sendArray(
      ['Блин, мне ещё предстоит долгий путь, поэтому расскажу тебе одну историю, просто чтобы от скуки не умереть.',
      'Однажды ко мне в клубе подкатывал какой-то парень. Естественно, я его отшила. Он встал передо мной и начал плакать. Ну, я конечно же вела себя как последняя тварь.',
      'Вообще, я сейчас просто вспоминаю, что я могла сделать в жизни такого плохого, чтобы меня вот так бросали в такой глуши.',
      'Знаешь, ты мне очень нравишься как собеседник. Просто ты действительно умеешь слушать.' ,
      'Другие постоянно перебивают и не дают договорить мысль.']
    )
    // Открываем кнопки
    await showButtons(
      ['Мне действительно очень приятно пообщаться с тобой, особенно если это может скрасить твое путешествие.', 'Мне тоже с тобой приятно общаться, мне кажется, тебе лучше вернуться туда, где ты была изначально и просто ждать пока за тобой кто-нибудь из вернётся']
    )
  }
  if ( e == 'Мне действительно очень приятно пообщаться с тобой, особенно если это может скрасить твое путешествие.' ) {

    // Отправляем сообщения персонажа
    await sendArray(
      ['Кажется, я уже долго иду и немного устала.',
'Вспоминаю, как я возвращалась с дачи с корзиной грибов. Тогда прогулка была приятной, а сейчас, к сожалению, не очень.',
'Пошел дождь. Я так хочу пить, что готова была высунуть язык, чтобы собрать капли. Кажется, начинается ливень, и я скоро промокну насквозь и погибну.',
'Соня говорит, что ей срочно нужно укрытие от дождя.']
    )
    // Открываем кнопки
    await showButtons(
      [
      'Давай под деревья и пережди дождик под ними.','Продолжай идти, дождь явно скоро закончится должен.'
      ]
    )
  }

if ( e == 'Давай под деревья и пережди дождик под ними.' ) {

    // Отправляем сообщения персонажа
    await sendArray(
      ['Хорошо, я под деревом сижу возле дороги, дождь вроде стихает ','Так, а ко мне машина едет, та же которая сюда меня и привзла.']
    )

    // Открываем кнопки
    await showButtons(
      [
      'Будьте под деревом, очень скоро вы уже вернётесь в отель', 'Беги оттуда, беги как можно быстрее','Просто послушай меня. Затаись вдоль деревьев и не высовывайся.'
      ]
    )
  }
  if ( e == 'Продолжай идти, дождь явно скоро закончится должен.' ) {

    // Отправляем сообщения персонажа
    await sendArray(
      ['Ладно, ладно, я подожду, пока он не закончится.',
      'За деревьями, кажется, сухо, постою пока там.',
      'Ага, по грунтовой дороге ко мне на встречу едет автомобиль']
    )

    // Открываем кнопки
    await showButtons(
      [
        'Оставайтесь на месте, похоже, что ваше приключение как-то быстро закончилось', 'Беги оттуда, куда угодно и как можно быстрее','Просто послушай меня.',
'Затаись вдоль деревьев и не высовывайся.'
      ]
    )
  }
  if ( e == 'Оставайтесь на месте, похоже, что ваше приключение как-то быстро закончилось'||e=='Будьте под деревом, очень скоро вы уже вернётесь в отель') {

    // Отправляем сообщения персонажа
    await sendArray(
      ['Хорошо, тогда я встану прямо на дороге так, чтобы он меня заметил, окей?']
    )

    // Открываем кнопки
    await showButtons(
      [
      'Окей', 'Окей, только осторожно'
      ]
    )
  }
  if ( e == 'Окей' ) {

    // Отправляем сообщения персонажа
    await sendArray(
      [' Окей, вот они тормозят, стоп , у одного из них ствол','чёрт чёрт чёрт']
    )
        showFinalButtons(
    ['Соня услышала оглушительный выстрел и почувствовала невыносимую боль в груди. Пуля калибра 7 мм вонзилась ей прямо в грудь, пробила насквозь и вылетела сзади.'],
    ['Начать новую игру'],
    true
  )
  }
  if ( e == 'Окей, только осторожно' ) {

    // Отправляем сообщения персонажа
    await sendArray(
      ['Окей, вот они тормозят, так стоп , это пистолет у одного из них в руках???']
    )
       showFinalButtons(
    ['Внезапно Соня услышала громкий хлопок выстрела почувствовала острую боль в груди. Пуля калибра 7 мм вонзилась ей прямо в грудь, пробила Соню насквозь и вылетела с другой стороны, в области спины.'],
    ['Начать новую игру'],
    true
  )
  }
  if ( e == 'Беги оттуда, беги как можно быстрее'||e=='Беги оттуда, куда угодно и как можно быстрее') {

    // Отправляем сообщения персонажа
    await sendArray(
      ['Что? Зачем?  Твою же, они вооружены, они стреляют.']
    )
       showFinalButtons(
    ['Не успела Соня и развернуться, как вдруг почувствовала невыносимую боль в груди и услышала оглушительный выстрел. Пуля калибра 7 миллиметров впилась ей прямо в спину, пронзила тело Сони насквозь и вылетела с другой стороны.'],
    ['Начать новую игру'],
    true
  )
  }

if ( e == 'Просто послушай меня. Затаись вдоль деревьев и не высовывайся.' ) {

    // Отправляем сообщения персонажа
    await sendArray(
      ['Странное дело, но что ж, соглашусь.',
      'Они проехали мимо, машина та же, что и раньше, но за рулем был не тот водитель, который подвозил меня.' ,
      'Двое каких-то мужчин, и вот я вышла на эту лесную дорогу, не понимая, зачем упустила ту машину - она могла бы вывезти меня отсюда давным-давно.', 
      'Зачем вообще давать такие советы?']
    )

    // Открываем кнопки
    await showButtons(
      [
      'Осмотрись, пожалуйста'
      ]
    )
  }
  if ( e == 'Осмотрись, пожалуйста' ) {

    // Отправляем сообщения персонажа
    await sendArray(
      ['Вокруг одна только трасса', 'хаха', 'Я на трассе.',
'Машин не видно совсем.', 'Ну и та машина, должно быть, уже далеко уехала к озеру.',' Кстати, я помню, как ехала сюда по этой дороге, я ещё в окно посмотрела.']
    )
    // Открываем кнопки
    await showButtons(
      ['Однажды какой-нибудь автомобиль точно приедет, стой где стоишь.', 'Прошу вас, идите по дороге']
    )
  }
  if ( e == 'Прошу вас, идите по дороге' ) {

    // Отправляем сообщения персонажа
    await sendArray(
      ['Я так устала, короче, я иду к отелю.']
    )

    // Открываем кнопки
    await showButtons(
      ['Иди, но только не к отелю.','Хорошо, иди к отелю']
    )
  }
if ( e == 'Однажды какой-нибудь автомобиль точно приедет, стой где стоишь.' ) {

    // Отправляем сообщения персонажа
    await sendArray(
      ['Блин, я так устала и есть так хочется. О, грибы на обочине дороги!']
    )

    // Открываем кнопки
    await showButtons(
      ['Не вздумай есть их.',
      'Ну вряд ли грибы ядовитые.']
    )
  }
  if ( e == 'Хорошо, иди к отелю' ) {

    // Отправляем сообщения персонажа
    await sendArray(
      ['Устала неимоверно, но выбирать не приходится, нужно выбираться отсюда.',
      'Вечно я в какие-то неприятности попадаю, если честно, с самого детства.',
      'Наконец-то машина едет, ура, меня наконец заберут! Они только с просёлочной дороги вывернули. Как я рада, что всё наконец-то будет хорошо!']
    )

    // Открываем кнопки
    await showButtons(
      [
      'Быстро брось куртку на дорогу и беги в кусты.','Беги и не оглядывайся.'
      ]
    )
  }
  if ( e == 'Беги и не оглядывайся.'||e=='Быстро беги в противоположную от неё сторону' ) {

    // Отправляем сообщения персонажа
    await sendArray(
      ['Чего? Зачем это ещё, они меня уже видят, вот и остановились.',' Супер.',
      'Ага один из них вышел из машины, уже очень темно, я не  вижу, что у него в руке.']
    )
       showFinalButtons(
    ['Соня не успела разглядеть, что именно было в руках у того мужчины, как 9-миллиметровая пуля вылетела из пистолета с накрученным предохранителем и пробила ее тонкую шею'],
    ['Начать новую игру'],
    true
  )
  }
  if ( e == 'Быстро брось куртку на дорогу и беги в кусты.' ||e=='Быстрее брось куртку на дорогу и беги в кусты.') {

    // Отправляем сообщения персонажа
    await sendArray(
      ['Чего блин? Куртку?']
    )

    // Открываем кнопки
    await showButtons(
      [
      'Бросай быстрее', 'Ладно, согласен, просто беги оттуда.'
      ]
    )
  }

  if ( e == 'Иди, но только не к отелю.' ) {

    // Отправляем сообщения персонажа
    await sendArray(
      ['Чего?! Я так устала, и даже не знаю, сколько еще идти.',
      'Тебе легко говорить, ты дома сидишь. Короче, иду в отель устраивать им разнос.',
      'Хватит меня переубеждать!',
      'Вдалеке машину вижу, похожа на ту, что привезла меня сюда. Похоже, они возвращаются в отель, скоро подъедут. Наконец-то дом, родной дом!']
    )
    // Открываем кнопки
    await showButtons(
      [
      'Быстро беги в противоположную от неё сторону','Быстрее брось куртку на дорогу и беги в кусты.'
      ]
    )
  }
  if ( e == 'Ладно, согласен, просто беги оттуда.') {

    // Отправляем сообщения персонажа
    await sendArray(
      ['Беги дорогая беги, беги ради папы и мамы...',
      'Да никуда никуда я не побегу, они меня сюда привезли, они и увезут. Воот, они остановились, супер.',
      'Я иду к ним.  Так один из них вышел, высокий, рыжеволосый, весьма симпатичный, ага, у него что-то в руке.',
      'Уже темно. Я не вижу, что это, это...']
    )
       showFinalButtons(
    ['Соня не успела разглядеть, что именно было в руках у того мужчины, как 9-миллиметровая пуля вылетела из пистолета с накрученным предохранителем и пробила ее тонкую шею'],
    ['Начать новую игру'],
    true
  )
  }

  if ( e == 'Бросай быстрее' ) {

    // Отправляем сообщения персонажа
    await sendArray(
      ['Ладно, странно, но ладно.',
      'Так, я в кювете, замерзшая и уставшая, но в кювете. Кажется, они меня не видят. Я искренне надеюсь, что всё это того стоило. Машина остановилась.',
      'Что случилось? У одного из них пистолет, нет, у двоих пистолеты. Один спустился в другой кювет, второй на дороге остался стоять у машины. Как хорошо, что я прыгнула не в тот кювет.',
      'Так они ищут меня?',
      'Почему у них пистолеты?',
      'Что, черт возьми, я здесь делаю?']
    )

    // Открываем кнопки
    await showButtons(
      [
      'Тебя это сейчас не касается, сиди тихо и не высовывайся.','Скорее напади на них, пока они не обнаружили тебя.'
      ]
    )
  }
if ( e == 'Ну вряд ли грибы ядовитые.') {

    // Отправляем сообщения персонажа
    await sendArray(
      ['Я бы не стала, наверное, так никогда делать, но сейчас, я просто с голоду по другому умру. ','Приятного мне аппетита.']
    )
    let overVoice = ['Проходит около 30 минут']
          // Отправляем сообщения персонажа
    await sendArray(
      ['Бэг вэг, если она сухая, это нет нет. Орут покупай, я покупаю, я всё всегда покупаю.']
    )
    // Открываем кнопки
    await showButtons(
      [
      'Ты меня слышишь?','У тебя всё в порядке?'
      ]
    )
  }
  if ( e == 'Не вздумай есть их.' ) {

    // Отправляем сообщения персонажа
    await sendArray(
      ['Я голодна, я реально хочу кушать, но проблема в том, что я не знаю, какие грибы можно кушать, а какие нет. Так что, наверное, ты прав, я так кушать хочу, но жить хочу сильнее.',
      'Так, а тут машина возвращается, не понимаю зачем я вообще от неё пряталась.',
      'Уже темно так, я к ней короче, мужчины в ней  по-любому из отеля и за мной приехали.']
    )

    // Открываем кнопки
    await showButtons(
      ['Попроси у них помощи.',
      'Беги от туда, как только можешь.'
      ]
    )
  }
  if ( e == 'Беги от туда, как только можешь.' ) {

    // Отправляем сообщения персонажа
    await sendArray(
      ['Ты что, серьезно?',
    'Я столько шла, еле на ногах стою, а ты предлагаешь мне бежать. Ну, слава богу, они остановились. Просто замечательно.',
    'Ого, неужели они и вправду остановились? Я даже не могу в это поверить. А что это он достал?',
    'Черт возьми, у него пистолет, он нацелился на меня!']
    )

  showFinalButtons(
    ['Соня бежала быстро, она никогда прежде не бегала быстрее, но, к сожалению, пуля с лёгкостью догнала нашу героиню и, пробив спину, угодила ей прямо в сердце, и, пробив правый желудочек, вылетело наружу.'],
    ['Начать новую игру'],
    true
  )

}
  if ( e == 'Попроси у них помощи.') {

    // Отправляем сообщения персонажа
    await sendArray(
      ['Ура ура , наконец-то я выберусь из этого всего тут. Ага вот они остановились',
        'Даже не верится, что такая фигня со мной происходит, хотя нет, со мной вечно всякая фигня происходит, это база.',
        'Стоп, что',
        'У них оружие, что делать?']
    )

    // Открываем кнопки
    await showButtons(
      [
      'Беги быстрее оттуда','Главное говори с ними','Нападение-лучшая защита'
      ]
    )
  }
  if ( e == 'Беги быстрее оттуда' ) {

  showFinalButtons(
    ['Соня бежала быстро, она никогда прежде не бегала быстрее, но, к сожалению, пуля с лёгкостью догнала нашу героиню и, пробив спину, угодила ей прямо в сердце, и, пробив правый желудочек, вылетело наружу.'],
    ['Начать новую игру'],
    true
  )

}
  if ( e == 'Главное говори с ними' ) {

  showFinalButtons(
    ['Не успела Соня сказать и слова, как пуля 7 калибра пробила тело нашей героини насквозь и вышло с обратной стороны.'],
    ['Начать новую игру'],
    true
  )

}
  if ( e == 'Нападение-лучшая защита' ) {

  showFinalButtons(
    ['Но какие шансы были у хрупкой девочки против крупного мужчины, тем более вооружённого пистолетом, Соня услышала лишь тихий звук выстрела пули, вылетевшей из  пистолета с накрученным на него аллюминиевым глушителем'],
    ['Начать новую игру'],
    true
  )

}
    
    if( e == 'Открыта концовка\n Пройти игру заново' || e == 'Начать новую игру'){

      setMessages([[]]) // Очищаем сообщения
      // Сбрасываем расположение сообщений в чате
      alignMessage = 'flex-start'
      textAlign = 'left'
      padding = [20,35]
      border = [0,9]

      // Добавляем исходные сообщения(закадровый голос)
      setMessages([first])
      chat[0][0] = '\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n'

      // Сбрасываем значения
      setButtons([])
      
      phrases = 1
      flag = false

      setButtons([])

    }
    if ( e == 'Изменить выбор' ) {

      await deleteArray()
      showButtons(prevBut)
    }
  }

  // Функция удаления предыдущего сообщения
  async function deleteArray ( err = false ) {

    // Отправляем первое сообщение
    messages.splice(messages.length-4,4)
    updateColor() // Обновляем расцветку в чате

    if ( !err ) {

      // updateAlign() // Обновляем распределение в чате в чате

    }

    setButtons([]) // Сбрасываем кнопки
    toEnd() // Скролим чат вниз

    // Делаем отступ сверху меньше
    let newArr = messages 
    newArr[0][0] = newArr[0][0].substring(0,newArr[0][0].length-1)
    setMessages(newArr)
    chat[0][0] = newArr[0][0]

    phrases-=4 // Засчитываем убавленную фразу

  }



  // Рендерим чат
  return (

    <SafeAreaView style={styles.container}>


      <StatusBar style="light" backgroundColor='#000' />


      <View style={styles.header}>

        <TouchableHighlight onPress={openMenu}>
          <Image source={require('../assets/menu.png')}
          style={styles.menu_icon}
          />
        </TouchableHighlight>

      </View>


      <View style={styles.chat}>

        <FlatList inverted={false} scrollEnabled={true} data={messages} style={[styles.list,{flexGrow:0}]} 
        ref={(ref) => { flatList = ref}}
        renderItem={({ item }) => (

          <FlatList inverted={false} scrollEnabled={false} data={item} style={[styles.list,{ alignItems: updateAlign() }]} 
          renderItem={({ item }) => (

            <View style={[styles.messageBlock]}>
              <Text style={[
                styles.message,
                {backgroundColor: updateColor(item)},
                {color: textColor},
                {borderBottomLeftRadius: border[0]},
                {borderBottomRightRadius: border[1]},
                {paddingLeft: padding[0]},
                {paddingRight: padding[1]},
                {textAlign: textAlign}]}>{item}</Text>
            </View>

          )}/>

        )}/>


        <View style={[styles.buttons,{borderWidth: buttonBorder}]}>

          <FlatList inverted={false} scrollEnabled={false} data={buttons} style={[styles.buttonList,{borderWidth: buttonBorder}]} 
          renderItem={({ item }) => (

            <Text onPress={() => plot(item)} style={[styles.button,
              // {borderTopLeftRadius: setButtonTopBorder()},
              // {borderTopRightRadius: setButtonTopBorder()},
              // {borderBottomLeftRadius: setButtonBottomBorder()},
              // {borderBottomRightRadius: setButtonBottomBorder()},
              {borderTopWidth: buttonBorder},
              {backgroundColor: buttonColor},
              {borderBottomWidth: buttonBorder}]}>{item}</Text>

          )}/>

        </View>

      </View>

    </SafeAreaView>

  );

}


//Стили
const styles = StyleSheet.create({

  container: { // Оснвной блок на весь экран
    flex: 1,
    backgroundColor: '#000',
    alignItems: 'center',
    justifyContent: 'flex-start'
  },

  header: { // Верхняя часть с кнопкой меню
    backgroundColor: '#000',
    alignItems: 'flex-start',
    justifyContent: 'center',
    height: '8%',
    width: '100%',
    paddingLeft: 20
  },

  menu_icon: { // Иконка кнопки меню 
    height: 35,
    width: 35
  },

  chat: { // Чат(сообщения и кнопки)
    backgroundColor: '#000',
    alignItems: 'center',
    justifyContent: 'flex-end',
    height: '92%',
    width: '100%'
  },

  list: { // Сообщения
    backgroundColor: 'fff',
    width: '100%'
  },

  messageBlock: { // Строка с сообщением
    width: '100%'
  },

  message: { // Само сообщение
    padding:10,
    paddingHorizontal:30,
    backgroundColor: '#fff',
    color: '#000',
    marginBottom: 10,
    marginHorizontal: 15,
    fontSize:19,
    borderRadius: 9,
    fontFamily: 'roboto'
  },

  buttons: { // Блок для кнопок
    backgroundColor: '#057a55',
    width:'90%',
    borderWidth:1,
    borderColor: '#fff',
    marginVertical: 10
  },

  buttonList:{ // Кнопки
    borderWidth:1,
    borderColor: '#fff',
    backgroundColor: '#057a55',
    width: '100%',
    borderColor: '#fff'
  },

  button: { // Кнопка
    padding:15,
    paddingHorizontal:30,
    backgroundColor: '#057a55',
    borderTopWidth:1,
    borderTopColor: '#fff',
    borderBottomWidth:1,
    borderBottomColor: '#fff',
    color: '#fff',
    width: '100%',
    textAlign: 'center',
    fontSize:19,
    fontFamily: 'roboto'
  },
});
